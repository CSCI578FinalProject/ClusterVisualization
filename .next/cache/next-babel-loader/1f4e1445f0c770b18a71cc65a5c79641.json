{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport \"antd/lib/table/style/css\";\nimport _Table from \"antd/lib/table\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/typography/style/css\";\nimport _Typography from \"antd/lib/typography\";\nimport \"antd/lib/layout/style/css\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"/Users/tianhangliu/education/csci578/cluster-visualization/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Highlighter from 'react-highlight-words';\nimport Link from 'next/link'; // Modified from sample code at https://ant.design/components/table/\n\nconst {\n  Header,\n  Content\n} = _Layout;\nconst {\n  Title\n} = _Typography;\n\nclass Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      searchText: '',\n      searchedColumn: ''\n    });\n\n    _defineProperty(this, \"getColumnSearchProps\", dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => __jsx(\"div\", {\n        style: {\n          padding: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, __jsx(_Input, {\n        ref: node => {\n          this.searchInput = node;\n        },\n        placeholder: `Search ${dataIndex}`,\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), __jsx(_Button, {\n        type: \"primary\",\n        onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n        icon: \"search\",\n        size: \"small\",\n        style: {\n          width: 90,\n          marginRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Search\"), __jsx(_Button, {\n        onClick: () => this.handleReset(clearFilters),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Reset\")),\n      filterIcon: filtered => __jsx(_Icon, {\n        type: \"search\",\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }),\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select());\n        }\n      },\n      render: text => this.state.searchedColumn === dataIndex ? __jsx(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }) : text\n    }));\n\n    _defineProperty(this, \"handleSearch\", (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    });\n\n    _defineProperty(this, \"handleReset\", clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    });\n  }\n\n  render() {\n    const {\n      data\n    } = this.props;\n    const dataSource = [];\n\n    for (let key of _Object$keys(data)) {\n      dataSource.push({\n        key: data[key].id,\n        id: data[key].id,\n        cluster: data[key].cluster,\n        elements: data[key].elements.join('\\n')\n      });\n    }\n\n    const columns = [_objectSpread({\n      title: 'Cluster',\n      dataIndex: 'cluster',\n      key: 'cluster'\n    }, this.getColumnSearchProps('cluster')), _objectSpread({\n      title: 'Elements',\n      dataIndex: 'elements',\n      key: 'elements'\n    }, this.getColumnSearchProps('elements')), {\n      title: 'Action',\n      key: 'action',\n      fixed: 'right',\n      width: 150,\n      render: (text, record) => __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: `/visualization?id=${record.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Visualize\")))\n    }];\n    return __jsx(_Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, __jsx(Header, {\n      style: {\n        padding: '0.5rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, __jsx(Title, {\n      style: {\n        textAlign: 'center',\n        color: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Cluster Visualization\")), __jsx(Content, {\n      style: {\n        margin: '2rem',\n        background: '#fff',\n        padding: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, __jsx(_Table, {\n      style: {\n        maxHeight: '80vh'\n      },\n      columns: columns,\n      dataSource: dataSource,\n      scroll: {\n        x: 1200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })));\n  }\n\n}\n\nIndex.getInitialProps = async function () {\n  const data = await import('../parser/cluster.json');\n  return {\n    data: data['default']\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/tianhangliu/education/csci578/cluster-visualization/pages/index.js"],"names":["Highlighter","Link","Header","Content","Title","Index","React","Component","searchText","searchedColumn","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","state","backgroundColor","setState","data","props","dataSource","key","push","id","cluster","elements","join","columns","title","getColumnSearchProps","fixed","textAlign","margin","background","maxHeight","x","getInitialProps"],"mappings":"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","sourcesContent":["import { Table, Input, Button, Icon, Layout, Typography } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport Link from 'next/link';\n// Modified from sample code at https://ant.design/components/table/\n\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\n\nclass Index extends React.Component {\n  state = {\n    searchText: '',\n    searchedColumn: ''\n  };\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n        text\n      )\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  render() {\n    const { data } = this.props;\n    const dataSource = [];\n    for (let key of Object.keys(data)) {\n      dataSource.push({\n        key: data[key].id,\n        id: data[key].id,\n        cluster: data[key].cluster,\n        elements: data[key].elements.join('\\n')\n      });\n    }\n\n    const columns = [\n      {\n        title: 'Cluster',\n        dataIndex: 'cluster',\n        key: 'cluster',\n        ...this.getColumnSearchProps('cluster')\n      },\n      {\n        title: 'Elements',\n        dataIndex: 'elements',\n        key: 'elements',\n        ...this.getColumnSearchProps('elements')\n      },\n      {\n        title: 'Action',\n        key: 'action',\n        fixed: 'right',\n        width: 150,\n        render: (text, record) => (\n          <span>\n            <Link href={`/visualization?id=${record.id}`}>\n              <a target=\"_blank\">Visualize</a>\n            </Link>\n          </span>\n        )\n      }\n    ];\n\n    return (\n      <Layout>\n        <Header\n          style={{\n            padding: '0.5rem'\n          }}\n        >\n          <Title\n            style={{\n              textAlign: 'center',\n              color: '#fff'\n            }}\n          >\n            Cluster Visualization\n          </Title>\n        </Header>\n        <Content\n          style={{\n            margin: '2rem',\n            background: '#fff',\n            padding: '1rem'\n          }}\n        >\n          <Table\n            style={{\n              maxHeight: '80vh'\n            }}\n            columns={columns}\n            dataSource={dataSource}\n            scroll={{ x: 1200 }}\n          ></Table>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nIndex.getInitialProps = async function() {\n  const data = await import('../parser/cluster.json');\n  return { data: data['default'] };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}