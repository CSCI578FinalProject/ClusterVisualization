{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport \"antd/lib/collapse/style/css\";\nimport _Collapse from \"antd/lib/collapse\";\nimport \"antd/lib/list/style/css\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/typography/style/css\";\nimport _Typography from \"antd/lib/typography\";\nimport \"antd/lib/layout/style/css\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"/Users/tianhangliu/education/csci578/cluster-visualization/pages/visualization.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport path from 'path';\nconst {\n  Header,\n  Content,\n  Sider\n} = _Layout;\nconst {\n  Title,\n  Text\n} = _Typography;\nconst {\n  Item\n} = _List;\nconst {\n  Panel\n} = _Collapse;\nimport dynamic from 'next/dynamic';\nconst ClusterGraph = dynamic(() => import('../components/ClusterGraph'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../components/ClusterGraph')],\n    modules: ['../components/ClusterGraph']\n  }\n});\nconst CLUSTER_ID = 'cluster';\n\nfunction Visualization(props) {\n  const {\n    data,\n    error\n  } = props;\n  const nodes = data.nodes;\n  const listData = nodes.map(node => ({\n    label: node.label,\n    id: node.id,\n    groupId: node.groupId,\n    className: node.className\n  }));\n  const clusterListData = listData.filter(item => item.groupId === CLUSTER_ID);\n  const neighborListData = listData.filter(item => item.groupId !== CLUSTER_ID);\n  const relatedACDCClusters = data.relatedACDCClusters;\n\n  const acdcClusterListData = _Object$keys(relatedACDCClusters).map(key => relatedACDCClusters[key]);\n\n  const usedClasses = {};\n\n  for (let node of clusterListData) {\n    usedClasses[node.className] = true;\n  }\n\n  return __jsx(_Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Header, {\n    style: {\n      padding: '0.5rem',\n      height: 'auto',\n      margin: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Title, {\n    style: {\n      textAlign: 'center',\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Visualization for \", data && data['groups'][0].title)), __jsx(Content, {\n    style: {\n      padding: '1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(_Layout, {\n    style: {\n      background: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Sider, {\n    width: 300,\n    style: {\n      background: '#fff',\n      padding: '0.25rem 0.5rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(_Collapse, {\n    bordered: false,\n    defaultActiveKey: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Panel, {\n    header: \"Elements\",\n    key: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      maxHeight: 400,\n      overflow: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), clusterListData.map(item => {\n    return __jsx(Item, {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, item.label));\n  })), __jsx(Panel, {\n    header: \"ACDC Clusters\",\n    key: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      maxHeight: 400,\n      overflow: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(_Collapse, {\n    bordered: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, acdcClusterListData.map(item => {\n    return __jsx(Panel, {\n      key: item.id,\n      header: item.cluster,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, item.elements.map(element => {\n      return __jsx(Item, {\n        key: element,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, __jsx(Text, {\n        mark: !!usedClasses[element],\n        style: {\n          maxWidth: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, element));\n    })));\n  })))), __jsx(Panel, {\n    header: \"Neighbors\",\n    key: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      maxHeight: 400,\n      overflow: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, neighborListData.map(item => {\n    return __jsx(Item, {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, item.label));\n  }))))), __jsx(Content, {\n    style: {\n      padding: '1rem',\n      minHeight: 280\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, error && __jsx(Title, {\n    style: {\n      textAlign: 'center'\n    },\n    type: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, error), !error && __jsx(ClusterGraph, {\n    data: data,\n    style: {\n      border: '1px solid black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })))));\n}\n\nVisualization.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  let error = '';\n  let data = null;\n\n  if (!id) {\n    error = 'Please provide an id for visualization';\n  } else {\n    data = await import(`../parser/cluster-graph/${id}.json`);\n  }\n\n  return {\n    data: data ? data['default'] : null,\n    error\n  };\n};\n\nexport default Visualization;","map":{"version":3,"sources":["/Users/tianhangliu/education/csci578/cluster-visualization/pages/visualization.js"],"names":["useRouter","path","Header","Content","Sider","Title","Text","Item","Panel","dynamic","ClusterGraph","ssr","CLUSTER_ID","Visualization","props","data","error","nodes","listData","map","node","label","id","groupId","className","clusterListData","filter","item","neighborListData","relatedACDCClusters","acdcClusterListData","key","usedClasses","padding","height","margin","textAlign","color","title","background","maxHeight","overflow","cluster","elements","element","maxWidth","minHeight","border","getInitialProps","context","query"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router';\nimport { Layout, Typography, List, Collapse } from 'antd';\nimport path from 'path';\nconst { Header, Content, Sider } = Layout;\nconst { Title, Text } = Typography;\nconst { Item } = List;\nconst { Panel } = Collapse;\nimport dynamic from 'next/dynamic';\nconst ClusterGraph = dynamic(import('../components/ClusterGraph'), {\n  ssr: false\n});\n\nconst CLUSTER_ID = 'cluster';\n\nfunction Visualization(props) {\n  const { data, error } = props;\n  const nodes = data.nodes;\n  const listData = nodes.map(node => ({\n    label: node.label,\n    id: node.id,\n    groupId: node.groupId,\n    className: node.className\n  }));\n\n  const clusterListData = listData.filter(item => item.groupId === CLUSTER_ID);\n  const neighborListData = listData.filter(item => item.groupId !== CLUSTER_ID);\n  const relatedACDCClusters = data.relatedACDCClusters;\n  const acdcClusterListData = Object.keys(relatedACDCClusters).map(\n    key => relatedACDCClusters[key]\n  );\n  const usedClasses = {};\n  for (let node of clusterListData) {\n    usedClasses[node.className] = true;\n  }\n\n  return (\n    <Layout>\n      <Header\n        style={{\n          padding: '0.5rem',\n          height: 'auto',\n          margin: 0\n        }}\n      >\n        <Title\n          style={{\n            textAlign: 'center',\n            color: '#fff'\n          }}\n        >\n          Visualization for {data && data['groups'][0].title}\n        </Title>\n      </Header>\n      <Content style={{ padding: '1rem' }}>\n        <Layout style={{ background: '#fff' }}>\n          <Sider\n            width={300}\n            style={{ background: '#fff', padding: '0.25rem 0.5rem' }}\n          >\n            <Collapse bordered={false} defaultActiveKey=\"1\">\n              <Panel header=\"Elements\" key=\"1\">\n                <div style={{ maxHeight: 400, overflow: 'auto' }}></div>\n                {clusterListData.map(item => {\n                  return (\n                    <Item key={item.id}>\n                      <Text>{item.label}</Text>\n                    </Item>\n                  );\n                })}\n              </Panel>\n              <Panel header=\"ACDC Clusters\" key=\"2\">\n                <div style={{ maxHeight: 400, overflow: 'auto' }}>\n                  <Collapse bordered={false}>\n                    {acdcClusterListData.map(item => {\n                      return (\n                        <Panel key={item.id} header={item.cluster}>\n                          <div>\n                            {item.elements.map(element => {\n                              return (\n                                <Item key={element}>\n                                  <Text\n                                    mark={!!usedClasses[element]}\n                                    style={{ maxWidth: '100%' }}\n                                  >\n                                    {element}\n                                  </Text>\n                                </Item>\n                              );\n                            })}\n                          </div>\n                        </Panel>\n                      );\n                    })}\n                  </Collapse>\n                </div>\n              </Panel>\n              <Panel header=\"Neighbors\" key=\"3\">\n                <div style={{ maxHeight: 400, overflow: 'auto' }}>\n                  {neighborListData.map(item => {\n                    return (\n                      <Item key={item.id}>\n                        <Text>{item.label}</Text>\n                      </Item>\n                    );\n                  })}\n                </div>\n              </Panel>\n            </Collapse>\n          </Sider>\n          <Content\n            style={{\n              padding: '1rem',\n              minHeight: 280\n            }}\n          >\n            {error && (\n              <Title\n                style={{\n                  textAlign: 'center'\n                }}\n                type=\"danger\"\n              >\n                {error}\n              </Title>\n            )}\n            {!error && (\n              <ClusterGraph\n                data={data}\n                style={{\n                  border: '1px solid black'\n                }}\n              ></ClusterGraph>\n            )}\n          </Content>\n        </Layout>\n      </Content>\n    </Layout>\n  );\n}\n\nVisualization.getInitialProps = async function(context) {\n  const { id } = context.query;\n  let error = '';\n  let data = null;\n  if (!id) {\n    error = 'Please provide an id for visualization';\n  } else {\n    data = await import(`../parser/cluster-graph/${id}.json`);\n  }\n  return { data: data ? data['default'] : null, error };\n};\n\nexport default Visualization;\n"]},"metadata":{},"sourceType":"module"}